* =========================================================================
 macro main run='-5'
* =========================================================================
   pson

   if ([run].eq.'-5') then
     glo/cre run $ENV(RUN)
   endif
   glo/cre run [run]
   
   
   close 21
   opt file 
   hi/del *
   vec/del *
   
* 1='3539.113'
   
   mess '**** RUN NUMBER : '//[run]//' ****'
   
   if ([run].EQ.' ') then
     mess Usage cutq <runid> [r]
     exitm
   endif
   
   dir=$ENV(ONLINEDIR)/hbook/
   file=[dir]//[run]//'.hbook'

   if ($FEXIST([file]).EQ.1) then
     hi/file 21 [file] 0 X
   else
     mess File [file] 'doesn''t exist'
     exitm
   endif
   hrin 0

   v/cre BID(120) R
   v/cre BIDP(120) R
   v/cre BIDM(120) R
   v/cre BIDP1(40) R
   v/cre BIDM1(40) R
   v/cre BIDP2(40) R
   v/cre BIDM2(40) R
   v/cre BIDP3(40) R
   v/cre BIDM3(40) R
   
   v/cre mean(3) R
   
* X90
   v/cre SR90(120) R
   v/cre SL90(120) R
   v/cre RSLT90(120) R
   v/cre ERR90(120) R
   
* X45
   v/cre SR45(120) R
   v/cre SL45(120) R
   v/cre RSLT45X(120) R
   v/cre ERR45X(120) R
   
* Y45
   v/cre ST45(120) R
   v/cre SB45(120) R
   v/cre RSLT45Y(120) R
   v/cre ERR45Y(120) R
   
   
   v/cre S45a(120) R		| Right Up
   v/cre S45b(120) R		| Right Bottom
   v/cre S45c(120) R		| Left Bottom
   v/cre S45d(120) R		| Left Top
   
   
   get_vec/cont ID=9292 VNAME=SR90
   get_vec/cont ID=9295 VNAME=SL90
   
   get_vec/cont ID=9291 VNAME=S45a
   get_vec/cont ID=9293 VNAME=S45b
   get_vec/cont ID=9294 VNAME=S45c
   get_vec/cont ID=9296 VNAME=S45d
   
   v/read BIDP1 spinpat.dat OPT='O'
   v/read BIDP2 spinpat.dat OPT=' '
   v/read BIDP3 spinpat.dat OPT=' '
   
   v/read BIDM1 spinpat.dat OPT=' '
   v/read BIDM2 spinpat.dat OPT=' '
   v/read BIDM3 spinpat.dat OPT=' '
   
   Do i=1,40
     v/input BIDP([i]) $EVAL(BIDP1([i]))
     bid1 = $EVAL([i]+40)
     v/input BIDP([bid1]) $EVAL(BIDP2([i]))
     bid2 = $EVAL([i]+80)
     v/input BIDP([bid2]) $EVAL(BIDP3([i]))
     
     v/input BIDM([i]) $EVAL(BIDM1([i]))
     bid1 = $EVAL([i]+40)
     v/input BIDM([bid1]) $EVAL(BIDM2([i]))
     bid2 = $EVAL([i]+80)
     v/input BIDM([bid2]) $EVAL(BIDM3([i]))
     
   Enddo
   
* ---------------------------------------------------
   application comis quit
      subroutine lrasym()
      implicit None
      vector SR90,SL90,RSLT90,BID,mean
      vector S45a,S45b,S45c,S45d
      vector RSLT45X,RSLT45Y
      vector SR45,SL45
      vector ST45,SB45
      vector ERR45X,ERR45Y,ERR90
      integer i
      integer val90,val45
      real sum90,sum45X,sum45Y
      real RC45,LC45,TC45,BC45,A_LR,A_TB
      real RC90,LC90,A90_LR
      
      val90=0
      val45=0
      sum45X=0
      sum45Y=0
      sum90=0
      
      RC45=0;LC45=0;TC45=0;BC45=0
      RC90=0;LC90=0 
* ACCEPTANCE RATIO
      Do i=1,120
	RC45 = RC45 + S45a(i) +S45b(i) ! Right
	LC45 = LC45 + S45c(i) +S45d(i) ! Left
	TC45 = TC45 + S45a(i) +S45d(i) ! Top
	BC45 = BC45 + S45b(i) +S45c(i) ! Bottom
	
	RC90 = RC90 + SR90(i)
	LC90 = LC90 + SL90(i)
      Enddo
      
      A90_LR = RC90/LC90;
      A_LR = RC45/LC45;
      A_TB = BC45/TC45;
      
      write(*,*) 'ACC90 LR = ',A90_LR,
     +      'ACC45 LR = ',A_LR,' ACC TB = ',A_TB 
      
      Do i=1,120
	SR45(i) = S45a(i) +S45b(i) ! Right
	SL45(i) = S45c(i) +S45d(i) ! Left
	
	ST45(i) = S45a(i) +S45d(i) ! Top
	SB45(i) = S45b(i) +S45c(i) ! Bottom
	
* 45-detectors
	if (SL45(i).le.1000) then
	  
	  RSLT45X(i) = -5.
	  RSLT45Y(i) = -5.
	  
	else 
	  
	  RSLT45X(i) = (SL45(i)*A_LR-SR45(i))/(SL45(i)*A_LR+SR45(i)) 
*	  ERR45X(i)  = sqrt(SL45(i)*A_LR*SR45(i))/
*     +	  (SL45(i)*A_LR+SR45(i))**(1.5)
	  ERR45X(i)  = 2*A_LR*sqrt(SL45(i)*SR45(i)*(SL45(i)+SR45(i)))/
     +	  (SL45(i)*A_LR+SR45(i))**2
	  
	  RSLT45Y(i) = (ST45(i)*A_TB-SB45(i))/(ST45(i)*A_TB+SB45(i)) 
*	  ERR45Y(i)=sqrt(ST45(i)*A_TB*SB45(i))/
*     +	  (ST45(i)*A_TB+SB45(i))**(1.5)
	  ERR45Y(i)=2.*A_TB*sqrt(ST45(i)*SB45(i)*(ST45(i)+SB45(i)))/
     +	  (ST45(i)*A_TB+SB45(i))**2
	  
	  if (abs(RSLT45Y(i)).le.0.5) then
	    val45=val45+1
	    sum45X=sum45X+RSLT45X(i)
	    sum45Y=sum45Y+RSLT45Y(i)
	  endif
	  
	endif
	
* 90-detectors
	if (SL90(i).le.1000) then
	  RSLT90(i) = -5.
	else
	  RSLT90(i) = (SL90(i)*A90_LR-SR90(i))/(SL90(i)*A90_LR+SR90(i)) 
*	  ERR90(i)=sqrt(SL90(i)*A90_LR*SR90(i))/
*     +	  (SL90(i)*A90_LR+SR90(i))**(1.5)
          ERR90(i)=2*A90_LR*sqrt(SL90(i)*SR90(i)*(SL90(i)+SR90(i)))/
     +	  (SL90(i)*A90_LR+SR90(i))**2.0
     
        if (abs(RSLT90(i)).le.0.5) then
	    val90=val90+1
	    sum90=sum90+RSLT90(i)
	  endif
	endif
	
	BID(i) = i

      Enddo
      
      mean(1)=sum90/float(val90)
      mean(2)=sum45X/float(val45)
      mean(3)=sum45Y/float(val45)
      write(*,*) 'VAL90',val90,sum90
      write(*,*) sum45Y,val45,mean(3)*1.414
      
      write(*,*) 'MEAN 1 ',mean(1)
      write(*,*) 'MEAN 2 ',mean(2)
      write(*,*) 'MEAN 3 ',mean(3)
      stop
      end
   quit
* ---------------------------------------------------
   
   call lrasym(1.)
   
* ============= Plot ===================
   v/cre ex(120) R
   
   opt ndat
   set MTYP 20
   
   set *FON -60
   set TXFP -60

   set GSIZ 0.7
   set YGTI 1.0
   set XMGR 1.0
   set XMGL 2.6
   
   set VSIZ 0.35
   set ASIZ 0.35
   set TSIZ 0.4
   set MSCF 1.0
   set XLAB 1.8
   set LWID 4

   
   COLOR_TABLE 9 1.0000 0.5409 0.0078 | goldenrod1
   COLOR_TABLE 10 0.6875 0.7656 0.8672 | light steel blue
   fill = $RSIGMA(int([run]))
   glo/cre prun $RSIGMA([run]-int([run]))
   
* ****************************
* bunch structure
* ****************************
   h/ope/add 9291 9292 1000
   h/ope/add 1000 9293 1000
   h/ope/add 1000 9294 1000
   h/ope/add 1000 9295 1000
   h/ope/add 1000 9296 1000
   
   zone 
   opt utit
   opt logy
   title_gl 'BUNCH DISTRIBUTION ' U
   if ([prun].ge.0.1) then
     set HCOL 9909
* set HCOL 6606
   else
     set HCOL 4404
   endif
   h/pl 1000
   atitle 'BUNCH ID' 'TOTAL COUNTS'
   opt liny
   wait
   
   exec stripdist
   
  mess 'MEAN 1 :' $RSIGMA(mean(1))
  mess 'MEAN 2 :' $RSIGMA(mean(2))
  mess 'MEAN 3 :' $RSIGMA(mean(3))
  
  mess 'now L-R'
* 
* ********************************
* asymmetry plots
* *********************************
  set HCOL 1
  if ([prun].ge.0.1) then
***     set PMCI 9
     set PMCI 6
     title_gl 'RUN '//[run]//' (YELLOW)'
   else
     set PMCI 4
     title_gl 'RUN '//[run]//' (BLUE)'
   endif     
   zone 1 3
   opt utit
   
   set PLCI 10
   
   title_gl 'X90 left - right' U
   l90=$RSIGMA(-0.02)
   u90=$RSIGMA(+0.02)
   null 0. 120. [l90] [u90]
   line 0. 0. 120. 0.
   line 20. [l90] 20. [u90]
   line 40. [l90] 40. [u90]
   line 60. [l90] 60. [u90]
   line 80. [l90] 80. [u90]
   line 100. [l90] 100. [u90]
   set PMCI 4
   hp/err BIDM RSLT90 ex ERR90 120 20 0.15 ' '
   set PMCI 2 
   hp/err BIDP RSLT90 ex ERR90 120 20 0.15 ' '
   atitle 'bunch crossing' 'Left-Right asym'

   
   title_gl 'X45 left - right' U
   l45=$RSIGMA(-0.02)
   u45=$RSIGMA(+0.02)
   null 0. 120. [l45] [u45]
   line 0. 0. 120. 0.
   line 20. [l45] 20. [u45]
   line 40. [l45] 40. [u45]
   line 60. [l45] 60. [u45]
   line 80. [l45] 80. [u45]
   line 100. [l45] 100. [u45]
   vscale RSLT45X 1.414 RSLT45XS
   vscale ERR45X 1.414 ERR45XS
   set PMCI 4 
   hp/err BIDM RSLT45XS ex ERR45XS 120 20 0.15 ' '
   set PMCI 2 
   hp/err BIDP RSLT45XS ex ERR45XS 120 20 0.15 ' '
   
   atitle 'bunch crossing' 'Left-Right asym'
   
   title_gl 'Y45 top - bottom' U
   ly45=$RSIGMA(-0.02)
   uy45=$RSIGMA(+0.02)
   null 0. 120. [ly45] [uy45]
   line 0. 0. 120. 0. 
   line 20. [ly45] 20. [uy45]
   line 40. [ly45] 40. [uy45]
   line 60. [ly45] 60. [uy45]
   line 80. [ly45] 80. [uy45]
   line 100. [ly45] 100. [uy45]
   vscale RSLT45Y 1.414 RSLT45YS
   vscale ERR45Y 1.414 ERR45YS
   set PMCI 4
   hp/err BIDM RSLT45YS ex ERR45YS 120 20 0.15 ' '
   set PMCI 2
   hp/err BIDP RSLT45YS ex ERR45YS 120 20 0.15 ' '
   atitle 'bunch crossing' 'Top-Bottom asym'

   sh rm -f spinpat.dat
   wait
   psoff

   ve/write BIDM,BIDP,RSLT90,ERR90 x90.dat 'F10.0,F10.0,F10.5,F10.5'
   ve/write BIDM,BIDP,RSLT45XS,ERR45XS x45.dat 'F10.0,F10.0,F10.5,F10.5'

 return
 
* ***********************
 macro stripdist
* ***********************
   mess 'inside of strip dist '
   glo/imp prun
   glo/imp run
   
   title_gl 'Strip Distribution ('//[run]//')' 
   
   opt utit
   opt nfile
   opt ndat
   opt nbox
   opt nsta
   
   zone 2 4 
   if ([prun].ge.0.1) then
     set HCOL 9909
* set HCOL 6606
   else
     set HCOL 4404
   endif
   set NDVX 10112
   
   v/cre tcounts(6) R 6*0.
   Do si=1,6
     v/cre vcounts(12) R 
* Si-[si]
     title_gl 'Si-'//[si] U
     Do i=1,12
       hid = $RSIGMA(200+([si]-1)*12+[i])
       h/pro [hid]
       if ($HEXIST([hid])) then
	 entry = $HINFO([hid],'ENTRIES')
	 v/input vcounts([i]) [entry]
	 mess $HINFO([hid],'ENTRIES')
	 totcnt = $RSIGMA(tcounts([si]))
	 mess [totcnt]
	 v/input tcounts([si]) $RSIGMA([totcnt]+[entry])
       endif
       
       
     Enddo
     1d 100 '' 12 -0.5 11.5
     put_vec/cont id=100 vname=vcounts
     h/pl 100 B
   Enddo
   
   title_gl 'Detector by detector' U
   1d 100 '' 6 0.5 6.5
   put_vec/cont id=100 vname=tcounts
   h/pl 100 B
   wait
 return









